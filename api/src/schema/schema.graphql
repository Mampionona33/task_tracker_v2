scalar GraphQLDate
enum StateType {
  Normal
  Sby
  Paf
}
#Fiches ---------
type Fiches {
  _id: String!
  id: Int
  typeTrav: String
  cat: String
  numFiche: String
  statuCom: String
  statuIvpn: String
  url: String
  state: StateType
  submiteState: Boolean
  nbBefor: Int
  nbAft: Int
  startDate: GraphQLDate
  validDate: GraphQLDate
  duree: String
  productivity: String
  comment: String
  processing: Boolean
}
##Filtre Fiches -------
input SearchFichesInputs {
  id: Int
  cat: String
  statuCom: String
  statuIvpn: String
  numFiche: String
  typeTrav: String
  submiteState: Boolean
}
##Inputs Fiches --------
input FichesInputs {
  typeTrav: String = "Empty Type"
  cat: String
  numFiche: String
  statuCom: String
  statuIvpn: String
  url: String
  state: StateType = Normal
  nbBefor: Int = 0
  nbAft: Int = 0
  startDate: GraphQLDate
  validDate: GraphQLDate
  submiteState: Boolean = false
  comment: String
  processing: Boolean = false
}
##Update Fiches --------
input UpdateFiches {
  _id: String
  id: Int
  typeTrav: String
  cat: String
  numFiche: String
  statuCom: String
  statuIvpn: String
  url: String
  state: StateType
  submiteState: Boolean
  nbBefor: Int
  nbAft: Int
  startDate: GraphQLDate
  validDate: GraphQLDate
  duree: String
  productivity: String
  processing: Boolean
  comment: String
}

#TypeTache ----------
type TypeTache {
  _id: String!
  id: Int!
  name: String!
  objectif: Float
}
##Taches Inputs ------
input TachesInputs {
  name: String
  objectif: Float
}

##Statut Commerciales
type StatCom {
  _id: String!
  id: Int!
  name: String!
}

input StatComInput {
  name: String
}

##Statut IVPN
type StatIvpn {
  _id: String!
  id: Int!
  name: String!
}
input StatIvpnInput {
  name: String!
}

#Responses
type DeleteResponse {
  acknowledged: Boolean
  deletedCount: Int
}
type UpdateResponse {
  acknowledged: Boolean
  matchedCount: Int
  modifiedCount: Int
}

input FilterById {
  id: Int
}

#### top level declarations
type Query {
  about: String!
  listFiches: [Fiches!]!
  listTypeTaches: [TypeTache!]!
  listStatCom: [StatCom!]!
  listStatIvpn: [StatIvpn!]!
  searchFiches(input: SearchFichesInputs): [Fiches]
}

type Mutation {
  setAboutMessage(message: String!): String

  # Mutation for type de taches
  typeTachesAdd(typeTache: TachesInputs): TypeTache
  typeTacheUpdate(filter: FilterById, update: TachesInputs): TypeTache
  typeTacheDelete(filter: FilterById): DeleteResponse!

  # mutation for fiche
  fichesAdd(fiche: FichesInputs!): Fiches!
  fichesUpdate(filter: FilterById, update: UpdateFiches): Fiches
  fichesDelete(filter: FilterById): DeleteResponse!

  # Mutation for status Commerciales
  statComAdd(statCom: StatComInput): StatCom!
  statComUpdate(filter: FilterById, update: StatComInput): StatCom
  statComDelete(filter: FilterById): DeleteResponse!

  # Mutation status IVPN
  statIvpnAdd(statIvpn: StatIvpnInput): StatIvpn!
  statIvpnUpdate(filter: FilterById, update: StatIvpnInput): StatIvpn
  statIvpnDelete(filter: FilterById): DeleteResponse!
}
